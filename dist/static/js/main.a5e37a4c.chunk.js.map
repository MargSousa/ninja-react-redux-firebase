{"version":3,"sources":["components/layout/SignedInLinks.js","actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/CreateProject.js","actions/projectActions.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","uid","Notifications","data","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","title","body","authorFirstName","authorLastName","date","calendar","ProjectList","project","Dashboard","this","projectsData","projectsNew","notifications","React","Component","compose","firestoreConnect","collection","orderBy","limit","console","log","projects","firestore","ordered","CreateProject","handleSubmit","event","preventDefault","createProject","history","push","handleChange","target","value","setState","onSubmit","htmlFor","onChange","getFirestore","author","add","firstName","lastName","authorId","Date","catch","err","error","ownProps","match","params","projectData","SignIn","signIn","email","password","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","res","doc","set","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5e37a4c.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../actions/authActions';\n\nconst SignedInLinks = (props) => {\n\n  return ( \n    <ul className=\"right\">\n      <li><NavLink to='/create' >New Project</NavLink></li>\n      <li><a onClick={props.signOut} >Log Out</a></li>\n      <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n    </ul>\n   );\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n \nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {   \n    // make async call to firebase auth\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' })\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', error: err })\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {   \n    const firebase = getFirebase();\n\n    firebase.auth().signOut()\n    .then(() => {\n      dispatch({ type: 'LOGOUT_SUCCESS' })\n    })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {   \n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password,\n    ).then((res) => {\n      return firestore.collection('users').doc(res.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', error: err })\n    })\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return ( \n    <ul className=\"right\">\n      <li><NavLink to='/signup' >SignUp</NavLink></li>\n      <li><NavLink to='/signin' >Login</NavLink></li>\n    </ul>\n   );\n}\n \nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n\n  const { auth, profile } = props;\n\n  return ( \n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\n        { auth.uid ?\n          <SignedInLinks profile={profile} />\n        :\n          <SignedOutLinks />\n        }\n      </div>\n    </nav>\n   );\n}\n \nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n\n  const { data } = props;\n\n  return ( \n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n           {data && data.map( notification => \n              <li key={notification.id}>\n                <span className=\"pink-text\">{notification.user} </span>\n                <span>{notification.content}</span>\n                <div className=\"grey-text note-date\">{moment(notification.time.toDate()).fromNow()}</div>\n              </li> )}\n          </ul>\n        </div>\n      </div>\n    </div>\n   );\n}\n \nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({ data }) => {\n\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <div className=\"card-title\">{data.title}</div>\n        <div className=\"card-body\">{data.body}</div>\n        <p>Posted by {data.authorFirstName} {data.authorLastName}</p>\n        <p className=\"grey-text\">{moment(data.date.toDate()).calendar()}</p>\n      </div>\n    </div>\n  );\n}\n \nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ data }) => {\n\n  return ( \n    <div className=\"project-list section\">\n      {data && data.map( project => \n        <Link to={`/project/${project.id}`} key={project.id}>\n          <ProjectSummary data={project} />\n        </Link>\n      )}\n    </div>\n   );\n}\n \nexport default ProjectList;","import React from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../project/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends React.Component {\n\n  render() {\n    const dummyProjects = this.props.projectsData;\n    const { projectsNew, notifications, auth } = this.props;\n    \n    if(!auth.uid) { return <Redirect to='/signin' />};\n\n    return(\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList data={projectsNew} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications data={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"store\", state)\n  return {\n    projectsData: state.project.projects,\n    projectsNew: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\n\nexport default compose(\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['date', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n  ]),\n  connect(mapStateToProps)\n)(Dashboard)","import React from 'react';\nimport { createProject } from '../../actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends React.Component {\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.createProject(this.state)\n    this.props.history.push('/')\n  }\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n    this.setState({ [id]: value });\n  }\n\n  render() { \n\n    if(!this.props.auth.uid) { return <Redirect to='/signin' />};\n    \n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text-text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Project Title</label>\n            <input  type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => (dispatch(createProject(project)))\n  }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {   \n\n    // make async call to firebase database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const author = getState().firebase.auth.uid;\n\n    firestore.collection('projects').add({\n      ...project, \n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: author,\n      date: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project: project })\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', error: err })\n    })\n  }\n}\n\n\n// What we would do normally\n// return {\n//   type: 'ADD_PROJECT',\n//   project: project\n// }","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n\n  const { projectData, auth } = props;\n\n  if(!auth.uid) { return <Redirect to='/signin' />};\n\n  return (\n    <div className=\"container section project-details\">\n      { projectData ? \n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <div className=\"card-title\">{projectData.title}</div>\n            <p>{projectData.content}</p>\n          </div>\n          <div className=\"card-action gret lighten-4 grey-text\">\n            <div>Posted by {projectData.authorFirstName} {projectData.authorLastName}</div>\n            <div>{moment(projectData.date.toDate()).calendar()}</div>\n          </div>\n        </div>\n        :\n        <div className=\"container center\">\n          <p>Loading project....</p>\n        </div>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n\n  return {\n    projectData: project,\n    auth: state.firebase.auth\n  }\n}\n \nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.signIn(this.state)\n  }\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n    this.setState({ [id]: value });\n  }\n\n  render() { \n\n    const { authError, auth } = this.props;\n    \n    if(auth.uid) { return <Redirect to='/' />};\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text-text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input  type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Password</label>\n            <input  type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n            { authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../actions/authActions';\n\nclass SignUp extends React.Component {\n  state = {    \n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.signUp(this.state)\n  }\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n    this.setState({ [id]: value });\n  }\n\n\n  render() { \n\n    const { auth, authError } = this.props;\n    if(auth.uid) { return <Redirect to='/' />};\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text-text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name:</label>\n            <input  type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name:</label>\n            <input  type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input  type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Password</label>\n            <input  type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n          </div>\n          <div className=\"red-text center\">\n            { authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => (dispatch(signUp(newUser)))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProject from './components/project/CreateProject';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\n\nclass App extends React.Component  {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/project/:id\" component={ProjectDetails} />\n            <Route exact path=\"/create\" component={CreateProject} />\n            <Route exact path=\"/signin\" component={SignIn} />\n            <Route exact path=\"/signup\" component={SignUp} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = [];\n\nconst authReducer = (state = initialState , action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n      console.log(\"login ERROR\")\n      return {\n        ...state,\n        authError: 'Login Failed'\n      };\n    case 'LOGIN_SUCCESS':\n      console.log(\"login OK\")\n      return {\n        ...state,\n        authError: null\n      };\n    case 'LOGOUT_SUCCESS':\n      console.log(\"logout OK\")\n      return state\n    case 'SIGNUP_SUCCESS':\n      console.log(\"sign OK\")\n      return {\n        ...state,\n        authError: null\n      };\n    case 'SIGNUP_ERROR':\n      console.log(\"signup ERROR\")\n      return {\n        ...state,\n        authError: action.error.message\n      };\n    default:\n      return state\n  }\n}\n\nexport default authReducer;","const initialState = {\n  projects: [\n    { id: '1', title: 'Project 1', content: 'Content 1' },\n    { id: '2', title: 'Project 2', content: 'Content 2' },\n    { id: '3', title: 'Project 3', content: 'Content 3' }\n  ]\n}\n\nconst projectReducer = (state = initialState , action) => {\n  switch(action.type) {\n    case 'CREATE_PROJECT':\n      console.log(\"create\")\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log(\"create error\")\n      return state;\n    default:\n      return state\n  }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nvar config = {\n  apiKey: \"AIzaSyByspi5j3_2QFm_0B0QQXYExtEbhvxbkkQ\",\n  authDomain: \"net-ninja-marioplan-fc21f.firebaseapp.com\",\n  databaseURL: \"https://net-ninja-marioplan-fc21f.firebaseio.com\",\n  projectId: \"net-ninja-marioplan-fc21f\",\n  storageBucket: \"net-ninja-marioplan-fc21f.appspot.com\",\n  messagingSenderId: \"81272261956\",\n  appId: \"1:81272261956:web:e8c529f1dcfc05fefedb11\",\n  measurementId: \"G-55Z4VSV5N0\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig';\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebaseConfig),\n    reactReduxFirebase(firebaseConfig, { useFirestoreForProfile:true, userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}